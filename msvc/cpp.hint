// 提示文件帮助 Visual Studio IDE 解释 Visual C++ 标识符,
// 如函数和宏的名称。
// 有关详细信息，请参见 https://go.microsoft.com/fwlink/?linkid=865984
#define LINK_ENTITY_TO_CLASS(mapClassName, DLLClassName) extern template int REMEMBER_TO_ADD_IN_cbase_typelist_h_<DLLClassName>(); EntityMetaData GetEntityMetaDataFor(type_identity<DLLClassName>) { return { REMEMBER_TO_ADD_IN_cbase_typelist_h_<DLLClassName>(), #mapClassName, WeaponEntityPlaceHolderFactory<DLLClassName>() }; }
#define LINK_ENTITY_TO_CLASS(mapClassName, DLLClassName) extern "C" EXPORT void mapClassName(entvars_t *pev) { GetClassPtr<DLLClassName>(pev); } extern template int REMEMBER_TO_ADD_IN_cbase_typelist_h_<DLLClassName>(); EntityMetaData GetEntityMetaDataFor(type_identity<DLLClassName>) { return { REMEMBER_TO_ADD_IN_cbase_typelist_h_<DLLClassName>(), #mapClassName, &mapClassName }; }
// 提示文件帮助 Visual Studio IDE 解释 Visual C++ 标识符,
// 如函数和宏的名称。
// 有关详细信息，请参见 https://go.microsoft.com/fwlink/?linkid=865984
#define LINK_ENTITY_TO_CLASS(mapClassName, DLLClassName) extern template int REMEMBER_TO_ADD_IN_cbase_typelist_h_<DLLClassName>(); EntityMetaData GetEntityMetaDataFor(type_identity<DLLClassName>) { return { REMEMBER_TO_ADD_IN_cbase_typelist_h_<DLLClassName>(), #mapClassName, WeaponEntityPlaceHolderFactory<DLLClassName>() }; }
#define LINK_ENTITY_TO_CLASS(mapClassName, DLLClassName) extern "C" EXPORT void mapClassName(entvars_t *pev) { GetClassPtr<DLLClassName>(pev); } extern template int REMEMBER_TO_ADD_IN_cbase_typelist_h_<DLLClassName>(); EntityMetaData GetEntityMetaDataFor(type_identity<DLLClassName>) { return { REMEMBER_TO_ADD_IN_cbase_typelist_h_<DLLClassName>(), #mapClassName, &mapClassName }; }
